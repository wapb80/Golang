
puedes modificar el ejemplo usando la libreria go-charts para generar un grafico en el iframe
Fuentes
Respuesta
Para modificar el ejemplo anterior y utilizar la biblioteca go-echarts para generar un gráfico dentro de un iframe, primero debes asegurarte de tener la biblioteca instalada y luego crear un endpoint en tu servidor Go que genere el gráfico y lo sirva como contenido HTML.
A continuación, te muestro cómo hacerlo paso a paso:
Estructura del Proyecto
Crea una carpeta para tu proyecto.
Dentro de esa carpeta, crea un archivo main.go y una carpeta llamada templates.
Instalación de go-echarts
Asegúrate de instalar la biblioteca go-echarts ejecutando el siguiente comando:
bash
go get -u github.com/go-echarts/go-echarts/v2

Archivo main.go
Este archivo contendrá el código del servidor y la lógica para manejar las solicitudes.
go
package main

import (
    "net/http"
    "math/rand"
    "github.com/go-echarts/go-echarts/v2/charts"
    "github.com/go-echarts/go-echarts/v2/opts"
)

func main() {
    http.HandleFunc("/", indexHandler)
    http.HandleFunc("/content", contentHandler)
    http.ListenAndServe(":8080", nil)
}

func indexHandler(w http.ResponseWriter, r *http.Request) {
    // Sirve la página principal
    http.ServeFile(w, r, "templates/index.html")
}

func contentHandler(w http.ResponseWriter, r *http.Request) {
    // Genera el gráfico y lo sirve
    bar := charts.NewBar()
    bar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{Title: "Gráfico de Barras", Subtitle: "Ejemplo usando go-echarts"}))

    // Datos aleatorios para el gráfico
    xAxis := []string{"Lunes", "Martes", "Miércoles", "Jueves", "Viernes"}
    bar.SetXAxis(xAxis).
        AddSeries("Categoría A", generateRandomData()).
        AddSeries("Categoría B", generateRandomData())

    // Renderiza el gráfico en HTML
    w.Header().Set("Content-Type", "text/html")
    _ = bar.Render(w)
}

// Función para generar datos aleatorios
func generateRandomData() []opts.BarData {
    items := make([]opts.BarData, 0)
    for i := 0; i < 5; i++ {
        items = append(items, opts.BarData{Value: rand.Intn(100)})
    }
    return items
}

Archivo index.html (en la carpeta templates)
Este archivo contiene la estructura principal con el iframe y el botón que carga el gráfico generado.
xml
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cargar Gráfico Dinámico en iframe</title>
    <script src="https://unpkg.com/htmx.org@1.9.2"></script> <!-- Incluir HTMX -->
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            font-family: Arial, sans-serif;
        }
        iframe {
            width: 80%;
            height: 400px; /* Altura del iframe */
            border: 1px solid #ccc; /* Borde del iframe */
            margin-top: 20px; /* Espaciado superior */
        }
        button {
            padding: 10px 15px;
            font-size: 16px;
            cursor: pointer;
        }
    </style>
</head>
<body>

<h1>Cargar Gráfico Dinámico en un iframe</h1>
<button id="loadContent" hx-get="/content" hx-target="#contenido" hx-swap="innerHTML">Generar Gráfico dentro del iframe</button>

<iframe id="iframe" name="iframe">
    <div id="contenido"></div> <!-- Este div no se renderiza como esperas en un iframe -->
</iframe>

<script>
    document.getElementById('loadContent').addEventListener('click', function() {
        const iframe = document.getElementById('iframe');
        // Cambia el src del iframe al endpoint que genera el contenido dinámico
        iframe.src = "/content"; // Cargar contenido en el iframe
    });
</script>

</body>
</html>

Cómo Funciona
Servidor Go:
El servidor Go escucha en el puerto 8080 y maneja dos rutas:
/: Sirve la página principal (index.html).
/content: Genera un gráfico utilizando go-echarts y lo sirve como contenido HTML.
Página Principal (index.html):
Contiene un botón que utiliza HTMX para hacer una solicitud GET a /content al ser presionado.
El script JavaScript cambia la fuente (src) del iframe a /content, lo que provoca que se cargue el gráfico dinámico.
Generación de Gráficos:
En la función contentHandler, se crea un gráfico de barras utilizando datos aleatorios generados por la función generateRandomData.
Ejecución
Para ejecutar este ejemplo:
Asegúrate de tener Go instalado en tu sistema.
Crea la estructura de carpetas y archivos como se describe.
Abre una terminal en la carpeta del proyecto y ejecuta:
bash
go run main.go

Abre tu navegador y ve a http://localhost:8080. Haz clic en "Generar Gráfico dentro del iframe" para cargar el gráfico dinámico.
Notas Importantes
HTMX y iframes: Aunque estamos utilizando HTMX para hacer una solicitud al servidor, ten en cuenta que no puedes manipular directamente elementos dentro de un iframe desde fuera de él. Por eso, simplemente cambiamos el src del iframe.
Seguridad: Asegúrate de que cualquier contenido cargado sea seguro y no contenga scripts maliciosos.
Este enfoque te permite integrar gráficos generados por go-echarts dentro de un iframe, mejorando así la interactividad y visualización de datos en tu aplicación web. Si tienes más preguntas o necesitas más ejemplos, ¡no dudes en preguntar!